rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    match /{document=**} {
      allow read, write: if false;
    }    
    
    match /Users/{userId} {
      allow read: if loggedIn();
      allow write: if belongsToRequester(userId);
    }   
    
    match /Recipes/{recipeId} {
      allow read: if loggedIn();
    }  
    
    match /Recipes/{recipeId}/Favoriters/{userId} {
      allow read: if loggedIn();
      allow write: if belongsToRequester(userId);
    }
    
    match /RecipeActivity/{activityId} {
      allow read: if loggedIn();
      allow create: if requesterUserId() == incomingData().userId;
      allow delete: if requesterUserId() == existingData().userId;
    }  
    
    match /Recipes/{recipeId}/Comments/{commentId} {
      allow read: if loggedIn();
      allow create: if requesterUserId() == incomingData().userId;
      allow delete: if requesterUserId() == existingData().userId;
    }
    
    match /BlogPosts/{postId} {
      allow read: if loggedIn();
    }  

    function loggedIn() {
      return request.auth.uid != null
    }

    function requesterUserId() {
      return request.auth.uid
    }

    function belongsToRequester(userId) {
      return request.auth.uid == userId
    }

    // [READ] Data that exists on the Firestore document
    function existingData() {
      return resource.data;
    }

    // [WRITE] Data that is sent to a Firestore document
    function incomingData() {
      return request.resource.data;
    }
    
  }
}